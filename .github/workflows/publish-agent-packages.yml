name: Publish Agent Packages

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish (e.g., patch, minor, major)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major
  push:
    branches:
      - main
    paths:
      - "agent-packages/**"

jobs:
  publish:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: agent-packages

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          registry-url: "https://registry.npmjs.org"
          scope: "@clearfeed-ai"
          cache: "yarn"

      - name: Configure git
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build packages
        run: yarn build

      - name: Version bump (manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        run: |
          cd packages/hubspot && npm version ${{ github.event.inputs.version }} -m "Bump hubspot to %s"
          cd ../jira && npm version ${{ github.event.inputs.version }} -m "Bump jira to %s"
          cd ../github && npm version ${{ github.event.inputs.version }} -m "Bump github to %s"
          cd ../common && npm version ${{ github.event.inputs.version }} -m "Bump common to %s"

      - name: Push version changes
        if: github.event_name == 'workflow_dispatch'
        run: git push --follow-tags

      - name: Determine changed packages
        id: changes
        run: |
          echo "CHANGED_PACKAGES=$(git diff --name-only HEAD^ HEAD | grep 'agent-packages/packages/' | cut -d/ -f3 | sort | uniq)" >> $GITHUB_ENV

      - name: Publish changed packages
        run: |
          for package in $CHANGED_PACKAGES; do
            cd packages/$package
            npm publish --access public
            cd ../..
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
